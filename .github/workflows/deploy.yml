name: Deploy create-employee with Docker

on:
  push:
    branches: [main, qa]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy and Run with Docker
        run: |
          # Subir el proyecto a la instancia
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r . ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/create_employee

          # Ejecutar comandos dentro de la instancia EC2
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            sudo apt update
            sudo apt install -y apt-transport-https ca-certificates curl software-properties-common gnupg

            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

            echo \
              "deb [arch=\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
              https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable" \
              | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo apt update
            sudo apt install -y docker-ce

            sudo usermod -aG docker ubuntu

            cd /home/ubuntu/create_employee
            docker stop create_employee || true && docker rm create_employee || true
            docker build -t create_employee .
            docker run -d --name create_employee -p 8000:8000 --env-file .env create_employee
          EOF