name: Build and Deploy create-employee to EC2 from MAIN

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: main

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/create-employee:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/create-employee:${{ env.IMAGE_TAG }}

      - name: Setup SSH
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          sed -i 's/\r//' key.pem
          chmod 400 key.pem

      - name: Deploy on EC2 using Docker Hub image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e
            echo "ðŸ“¦ Deploying create-employee from Docker Hub..."

            if ! command -v docker &> /dev/null; then
              echo "ðŸ›  Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            echo "${{ secrets.CREATE_EMPLOYEE_ENV_FILE }}" > ~/create_employee.env

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/create-employee:${{ env.IMAGE_TAG }}
            sudo docker rm -f create_employee || true
            sudo docker run -d --restart=always \
              --name create_employee \
              --env-file ~/create_employee.env \
              -p 8000:8000 \
              ${{ secrets.DOCKER_USERNAME }}/create-employee:${{ env.IMAGE_TAG }}

            echo "âœ… create-employee deployed successfully (main)"
          EOF